# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET and frontend CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_backend:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      env:
        JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
        JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
        JWT_SIGNINGKEY: ${{ secrets.JWT_SIGNINGKEY }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_FIRSTNAME: ${{ secrets.ADMIN_FIRSTNAME }}
        ADMIN_LASTNAME: ${{ secrets.ADMIN_LASTNAME }}
        ADMIN_PHONENUMBER: ${{ secrets.ADMIN_PHONENUMBER }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}


  build_frontend:
      runs-on: ubuntu-latest
      needs: build_backend

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

  docker_backend:
    needs: build_backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./CraftsmanContact
        file: ./CraftsmanContact/Dockerfile
        push: true
        tags: evib/craftsmen-backend:latest


  docker_frontend:
    needs: build_frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: evib/craftsmen-frontend:latest


  deploy_backend:
    needs: docker_backend
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Render Deployment
      run: |
        curl -X POST \
        -H "Accept: application/json" \
        -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
        -d '' \
        https://api.render.com/v1/services/SERVICE_ID/deploys

  deploy_frontend:
    needs: docker_frontend
    runs-on: ubuntu-latest

    steps:
    - name: Trigger Render Frontend Deployment
      run: |
        curl -X POST \
        -H "Accept: application/json" \
        -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
        -d '' \
        https://api.render.com/v1/services/FRONTEND_SERVICE_ID/deploys
